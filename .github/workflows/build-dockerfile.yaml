name: build-julia-notebook-jp

on: 
  push: 
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ${{ github.repository }}
  #set tagname
  TAG_NAME: latest
  #set targetdir
  TARGET_DIR: ./

jobs:
  upstream-digest-check:
    runs-on: ubuntu-latest
    outputs:
      update: ${{ steps.get_base_image_digest.outputs.update }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.base_image_digest
          key: ${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}

      - name: mkdir base_image_digest
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.base_image_digest
          touch ~/.base_image_digest/previous_base_image_digest

      - name: Get previous base image digest
        id: get_previous_base_image_digest
        run: |
          echo "previous_base_image_digest=$(cat ~/.base_image_digest/previous_base_image_digest)" >> "$GITHUB_OUTPUT"

      - name: Get base image digest
        id: get_base_image_digest
        run: |
          base_image_digest=$(docker manifest inspect quay.io/jupyter/julia-notebook:latest -v | jq -r '.[0].Descriptor.digest')
          if [[ "$base_image_digest" != "${{ steps.get_previous_base_image_digest.outputs.previous_base_image_digest }}" ]]; then
            echo update=false >> "$GITHUB_OUTPUT"
          else
            echo "$base_image_digest >> ~/.base_image_digest/previous_base_image_digest" && \
            echo update=true >> "$GITHUB_OUTPUT"
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push-image:
    needs: upstream-digest-check
    # Ensure test job passes before pushing image.
    if: ${{ needs.upstream-digest-check.outputs.update == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: get base image digest
        id: get_base_image_digest
        run: |
          docker manifest inspect quay.io/jupyter/julia-notebook:latest -v | jq -r '.[0].Descriptor.digest'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.ACTOR }}
          password: ${{ github.TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          driver-opts: network=host

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: ${{ env.TAG_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.TARGET_DIR }}
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
